from typing import List

from django.shortcuts import get_object_or_404
from ninja import Router
from ninja.pagination import paginate

from django_starter.http.response import responses

from apps.{{ app.name }}.models import *
from apps.{{ app.name }}.apis.{{ model.slug }}.schemas import *

router = Router(tags=['{{ model.slug }}'])


@router.post('/{{ model.slug }}', response={{ model.name }}Out)
def create(request, payload: {{ model.name }}In):
    item = {{ model.name }}.objects.create(**payload.dict())
    return item


@router.get('/{{ model.slug }}/{item_id}', response={{ model.name }}Out)
def retrieve(request, item_id):
    item = get_object_or_404({{ model.name }}, id=item_id)
    return item


@router.get('/{{ model.slug }}', response=List[{{ model.name }}Out])
@paginate
def list_items(request):
    qs = {{ model.name }}.objects.all()
    return qs


@router.put('/{{ model.slug }}/{item_id}', response={{ model.name }}Out)
def update(request, item_id, payload: {{ model.name }}In):
    item = get_object_or_404({{ model.name }}, id=item_id)
    for attr, value in payload.dict().items():
        setattr(item, attr, value)
    item.save()
    return item


@router.patch('/{{ model.slug }}/{item_id}', response={{ model.name }}Out)
def partial_update(request, item_id, payload: {{ model.name }}In):
    item = get_object_or_404({{ model.name }}, id=item_id)
    for attr, value in payload.dict(exclude_unset=True).items():
        setattr(item, attr, value)
    item.save()
    return item


@router.delete('/{{ model.slug }}/{item_id}')
def destroy(request, item_id):
    item = get_object_or_404({{ model.name }}, id=item_id)
    item.delete()
    return responses.ok('已删除')
